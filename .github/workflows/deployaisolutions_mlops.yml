name: Azure-test-compute

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  COMPUTE_INSTANCE_NAME: cli-created-machine

jobs:
  azure-pipeline:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out code repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure test - Get Compute
        uses: Azure/CLI@v2.1.0
        with:
          azcliversion: 2.75.0
          inlineScript: |
            az extension add --name ml
            az configure --defaults group=${{ secrets.AZURE_RESOURCEGROUP }} workspace=${{ secrets.AZURE_WORKSPACE }} location=${{ secrets.AZURE_LOCATION }}
            az ml compute list

      - name: Azure start up compute
        uses: Azure/CLI@v2.1.0
        with: 
          azcliversion: 2.75.0          
          inlineScript: |
            az extension add --name ml
            az configure --defaults group=${{ secrets.AZURE_RESOURCEGROUP }} workspace=${{ secrets.AZURE_WORKSPACE }} location=${{ secrets.AZURE_LOCATION }}            
            az ml compute create --file ./03_DeployAISolutions/05_MLOps/ai-pipeline/environment/compute.yaml
        continue-on-error: true # Quick fix. If compute already exists, just move on. 

      - name: Azure -- Environment Setup
        uses: Azure/CLI@v2.1.0
        with:
          azcliversion: 2.75.0
          inlineScript: |
            az extension add --name ml
            az configure --defaults group=${{ secrets.AZURE_RESOURCEGROUP }} workspace=${{ secrets.AZURE_WORKSPACE }} location=${{ secrets.AZURE_LOCATION }}  
            az ml environment create --file ./03_DeployAISolutions/05_MLOps/ai-pipeline/environment/preprocessing.yaml
            az ml environment create --file ./03_DeployAISolutions/05_MLOps/ai-pipeline/environment/training.yaml

      - name: Azure -- Component Setup
        uses: Azure/CLI@v2.1.0
        with:
          azcliversion: 2.75.0
          inlineScript: |
            az extension add --name ml
            az configure --defaults group=${{ secrets.AZURE_RESOURCEGROUP }} workspace=${{ secrets.AZURE_WORKSPACE }} location=${{ secrets.AZURE_LOCATION }}  
            az ml component create --file ./03_DeployAISolutions/05_MLOps/ai-pipeline/components/dataprep/dataprep.yaml
            az ml component create --file ./03_DeployAISolutions/05_MLOps/ai-pipeline/components/dataprep/train_test_split.yaml
            az ml component create --file ./03_DeployAISolutions/05_MLOps/ai-pipeline/components/training/training.yaml

      - name: Azure -- Create and run job
        uses: Azure/CLI@v2.1.0
        with:
          azcliversion: 2.75.0
          inlineScript: |
            az extension add --name ml
            az configure --defaults group=${{ secrets.AZURE_RESOURCEGROUP }} workspace=${{ secrets.AZURE_WORKSPACE }} location=${{ secrets.AZURE_LOCATION }}  
            az ml job create --file ./03_DeployAISolutions/05_MLOps/ai-pipeline/ai-pipeline.yaml --stream --set model_name=animals-classification-${{ github.sha }}-${{ github.run_id }}


      - name: Azure -- Stop compute
        uses: Azure/CLI@v2.1.0
        with:
          azcliversion: 2.75.0
          inlineScript: |
            az extension add --name ml
            az configure --defaults group=${{ secrets.AZURE_RESOURCEGROUP }} workspace=${{ secrets.AZURE_WORKSPACE }} location=${{ secrets.AZURE_LOCATION }}  
            az ml compute stop --name ${{ env.COMPUTE_INSTANCE_NAME }}
        continue-on-error: true

  download:
    needs: azure-pipeline # New!!
    runs-on: ubuntu-24.04
    steps:

    - name: Check out repository
      uses: actions/checkout@v4
      
    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure -- Download Model
      uses: azure/CLI@v2.1.0
      with:
        azcliversion: 2.64.0
        inlineScript: |
          az extension add --name ml -y
          az configure --defaults group=${{ secrets.AZURE_RESOURCEGROUP }} workspace=${{ secrets.AZURE_WORKSPACE }} location=${{ secrets.AZURE_LOCATION }}  
          VERSION=$(az ml model list -n animal-classification --query "[0].version" -o tsv)
          az ml model download --name animal-classification --version $VERSION  --download-path ./inference

    - name: Docker -- Upload API code from Inference
      uses: actions/upload-artifact@v4.3.3
      with:
        name: docker-config
        path: inference
